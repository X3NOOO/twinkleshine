<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="141.93675mm"
   height="18.46813mm"
   viewBox="0 0 141.93675 18.468131"
   version="1.1"
   id="svg1"
   inkscape:version="1.4 (e7c3feb100, 2024-10-09)"
   sodipodi:docname="logo.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#000000"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="true"
     inkscape:deskcolor="#000000"
     inkscape:document-units="mm"
     inkscape:clip-to-page="false"
     inkscape:zoom="1.4142136"
     inkscape:cx="126.21856"
     inkscape:cy="5.6568542"
     inkscape:window-width="1920"
     inkscape:window-height="1150"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" />
  <defs
     id="defs1">
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath125">
      <path
         id="path125"
         style="stroke-width:0.1;stroke-linecap:square;paint-order:markers fill stroke;stop-color:#000000"
         d="M 438.25066,553.76374 H 1298.1212 V 755.15928 H 438.25066 Z"
         sodipodi:nodetypes="ccccc" />
    </clipPath>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath122">
      <path
         id="path122"
         style="stroke-width:0.1;stroke-linecap:square;paint-order:markers fill stroke;stop-color:#000000"
         d="M 438.25066,553.76374 H 1298.1212 V 755.15928 H 438.25066 Z"
         sodipodi:nodetypes="ccccc" />
    </clipPath>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath25">
      <rect
         style="fill:#ff0000;stroke:none;stroke-width:3;stroke-linecap:square;stroke-linejoin:miter;paint-order:stroke markers fill;stop-color:#000000"
         id="rect25-8"
         width="78"
         height="45.033199"
         x="763.61322"
         y="452.82422" />
    </clipPath>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath64">
      <path
         id="path64"
         style="stroke-width:0.1;stroke-linecap:square;paint-order:markers fill stroke;stop-color:#000000"
         d="M 438.25066,553.76374 H 1298.1212 V 755.15928 H 438.25066 Z"
         sodipodi:nodetypes="ccccc" />
    </clipPath>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath63">
      <path
         id="path63"
         style="stroke-width:0.1;stroke-linecap:square;paint-order:markers fill stroke;stop-color:#000000"
         d="M 438.25066,553.76374 H 1298.1212 V 755.15928 H 438.25066 Z"
         sodipodi:nodetypes="ccccc" />
    </clipPath>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath5">
      <path
         id="path5"
         style="stroke-width:0.1;stroke-linecap:square;paint-order:markers fill stroke;stop-color:#000000"
         d="M 438.25066,553.76374 H 1298.1212 V 755.15928 H 438.25066 Z"
         sodipodi:nodetypes="ccccc" />
    </clipPath>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient138"
       gradientUnits="userSpaceOnUse"
       x="91.01667"
       y="2.4696167">
      <meshrow
         id="meshrow138">
        <meshpatch
           id="meshpatch138">
          <stop
             path="c 16.9734,0  33.9467,0  50.9201,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop138" />
          <stop
             path="c 0,5.33284  0,10.6657  0,15.9985"
             style="stop-color:#5c29e4;stop-opacity:1"
             id="stop139" />
          <stop
             path="c -16.9734,0  -33.9467,0  -50.9201,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop140" />
          <stop
             path="c 0,-5.33284  0,-10.6657  0,-15.9985"
             style="stop-color:#5c29e4;stop-opacity:1"
             id="stop141" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1">
    <path
       d="m 293.6,110 c -6.8,-6 -15.2,-9.6 -24.8,-9.6 h -57.6 c -4.4,0 -8.4,-3.6 -8.4,-8.4 V 34.4 c 0,-9.6 -4,-18 -10,-24.4 C 186.4,3.6 178,0 168.4,0 h -34 c -9.6,0 -18,4 -24.4,10 -6.4,6.4 -10,14.8 -10,24.4 V 92 c 0,4.4 -3.6,8.4 -8.4,8.4 H 34.4 c -9.6,0 -18,4 -24.4,10 -6.4,6.4 -10,14.8 -10,24.4 v 34 c 0,9.6 4,18 10,24.4 6.4,6.4 14.8,10 24.4,10 H 92 c 4.4,0 8.4,3.6 8.4,8.4 v 57.6 c 0,9.6 4,18 10,24.4 6.4,6.4 14.8,10 24.4,10 h 34 c 9.6,0 18,-4 24.4,-10 6.4,-6.4 10,-14.8 10,-24.4 v -58 c 0,-4.4 3.6,-8.4 8.4,-8.4 h 57.6 c 9.6,0 18,-4 24.4,-10 6.4,-6.4 10,-14.8 10,-24.4 v -34 c 0,-9.6 -4,-18 -10,-24.4 z"
       style="clip-rule:evenodd;fill:#2ebbb2;fill-rule:nonzero;stroke-linejoin:round;stroke-miterlimit:2"
       id="path8"
       transform="scale(0.05809911)"
       inkscape:label="Logo"
       sodipodi:insensitive="true" />
    <path
       id="text36"
       style="font-weight:bold;font-size:17.6389px;font-family:Barlow;-inkscape-font-specification:'Barlow Bold';fill:#ffffff;stroke-width:0.264583"
       d="m 55.93302,2.4696167 c -0.917223,0 -1.722593,0.1763887 -2.41639,0.5291667 -0.693797,0.352778 -1.22929,0.8523736 -1.605587,1.4991333 -0.376296,0.6467597 -0.564306,1.3935061 -0.564306,2.2401733 v 4.074687 c 0,0.846667 0.18801,1.593413 0.564306,2.240173 0.376297,0.64676 0.91179,1.152166 1.605587,1.516703 0.693797,0.352778 1.499167,0.529167 2.41639,0.529167 0.905464,0 1.699213,-0.170578 2.38125,-0.511597 0.693797,-0.341018 1.228773,-0.823182 1.60507,-1.446423 0.388056,-0.623241 0.581877,-1.340417 0.581877,-2.151807 0,-0.04704 -0.02324,-0.08823 -0.07028,-0.123506 -0.03528,-0.03528 -0.08228,-0.05271 -0.141077,-0.05271 l -2.063957,-0.08837 c -0.141111,0 -0.211356,0.06495 -0.211356,0.194303 0,0.611482 -0.194338,1.105267 -0.582394,1.481564 -0.376296,0.376296 -0.875892,0.564306 -1.499133,0.564306 -0.635,0 -1.146734,-0.18801 -1.53479,-0.564306 -0.376297,-0.376297 -0.564307,-0.870082 -0.564307,-1.481564 V 6.6672933 c 0,-0.6232412 0.18801,-1.1228368 0.564307,-1.4991333 0.388056,-0.3762966 0.89979,-0.5643066 1.53479,-0.5643066 0.623241,0 1.122837,0.18801 1.499133,0.5643066 0.388056,0.3762965 0.582394,0.8758921 0.582394,1.4991333 0,0.1293519 0.05862,0.1943034 0.176216,0.1943034 h 0.03514 L 60.28986,6.73809 C 60.430971,6.714572 60.501217,6.64962 60.501217,6.5437866 60.501217,5.7323972 60.307396,5.0210319 59.91934,4.40955 59.543043,3.7863088 59.008067,3.3104729 58.31427,2.9812134 57.632233,2.6401946 56.838484,2.4696167 55.93302,2.4696167 Z M 21.37854,2.6106934 c -0.0588,0 -0.112126,0.023243 -0.159163,0.07028 -0.03528,0.035278 -0.05271,0.08228 -0.05271,0.1410767 V 14.74587 c 0,0.0588 0.01743,0.112126 0.05271,0.159163 0.04704,0.03528 0.100367,0.05271 0.159163,0.05271 h 4.568197 c 1.258241,0 2.275381,-0.287826 3.051493,-0.86403 0.776112,-0.587963 1.16427,-1.452474 1.16427,-2.593123 0,-1.340556 -0.558736,-2.2990725 -1.675867,-2.8752766 -0.07056,-0.035278 -0.07056,-0.070659 0,-0.1059367 0.999538,-0.5056485 1.49965,-1.3463999 1.49965,-2.5223266 0,-2.2577793 -1.393677,-3.3863566 -4.180623,-3.3863566 z m 25.911597,0 c -0.0588,0 -0.112127,0.023243 -0.159164,0.07028 -0.03528,0.035278 -0.05271,0.08228 -0.05271,0.1410767 v 3.7749633 c 0,0.035278 -0.01162,0.058521 -0.03514,0.07028 -0.02352,0.011759 -0.04728,1.378e-4 -0.0708,-0.03514 -0.470371,-0.5879633 -1.128923,-0.8821167 -1.97559,-0.8821167 -0.858427,0 -1.581414,0.223908 -2.169377,0.6707601 -0.576204,0.4350929 -0.999744,1.0286935 -1.270207,1.7812866 -0.211666,0.6232412 -0.317293,1.3525554 -0.317293,2.1874636 0,0.811389 0.09982,1.522754 0.299723,2.134236 0.258704,0.799631 0.682244,1.428612 1.270207,1.887224 0.599723,0.458611 1.311088,0.687813 2.134237,0.687813 0.858426,0 1.53441,-0.323207 2.0283,-0.969967 0.02352,-0.02352 0.04728,-0.02933 0.0708,-0.01757 0.02352,0 0.03514,0.01743 0.03514,0.05271 v 0.581877 c 0,0.0588 0.01743,0.112126 0.05271,0.159163 0.04704,0.03528 0.100367,0.05271 0.159164,0.05271 h 2.06344 c 0.0588,0 0.105799,-0.01743 0.141076,-0.05271 0.04704,-0.04704 0.0708,-0.100367 0.0708,-0.159163 V 2.82205 c 0,-0.058796 -0.02376,-0.1057989 -0.0708,-0.1410767 -0.03528,-0.047037 -0.08228,-0.07028 -0.141076,-0.07028 z M 23.741703,4.74493 h 2.063957 c 0.552686,0 0.982036,0.1351969 1.287777,0.40566 0.305741,0.2587039 0.45837,0.6172919 0.45837,1.0759033 0,0.4468522 -0.152629,0.7996295 -0.45837,1.0583334 -0.305741,0.2587038 -0.735091,0.38809 -1.287777,0.38809 h -2.063957 c -0.0588,0 -0.08785,-0.02957 -0.08785,-0.088367 v -2.751253 c 0,-0.058796 0.02905,-0.088367 0.08785,-0.088367 z m 58.102914,0.9875366 c -0.928982,0 -1.73487,0.2471509 -2.416907,0.7410401 -0.670278,0.4938892 -1.140303,1.158252 -1.410767,1.99316 -0.176389,0.4938892 -0.264583,1.0642469 -0.264583,1.7110063 0,0.952501 0.123575,1.72249 0.37052,2.310454 0.305741,0.823148 0.805337,1.464268 1.499133,1.92288 0.705556,0.458611 1.56374,0.687813 2.575037,0.687813 0.729075,0 1.399765,-0.129386 2.011247,-0.38809 0.611482,-0.270463 1.111077,-0.646483 1.499133,-1.128613 0.04704,-0.07056 0.07028,-0.117558 0.07028,-0.141077 0,-0.04704 -0.02905,-0.100367 -0.08785,-0.159163 l -1.270207,-1.25212 c -0.04704,-0.04704 -0.08823,-0.0708 -0.123506,-0.0708 -0.0588,0 -0.11161,0.03538 -0.158647,0.105937 -0.435093,0.599722 -1.028694,0.905497 -1.781287,0.917256 -0.940741,0 -1.564429,-0.329017 -1.87017,-0.987536 -0.09407,-0.235186 -0.158509,-0.470715 -0.193786,-0.7059 -0.02352,-0.0588 2.41e-4,-0.08785 0.0708,-0.08785 h 5.450314 c 0.141111,0 0.217167,-0.07076 0.228926,-0.211874 0.02352,-0.552685 2.76e-4,-1.0522808 -0.07028,-1.499133 C 85.819143,8.3492111 85.383982,7.4376975 84.666667,6.75566 83.961111,6.0736225 83.020543,5.7324666 81.844617,5.7324666 Z m -16.122014,0.01757 c -0.705556,0 -1.346676,0.111954 -1.92288,0.3353801 -0.564445,0.223426 -1.022848,0.5350115 -1.375626,0.9348266 -0.341019,0.3998151 -0.53484,0.8465975 -0.581877,1.3404867 -0.01176,0.082315 0.05268,0.1351281 0.193787,0.1586466 l 2.134236,0.2826701 c 0.117593,0.011759 0.194166,-0.047381 0.229444,-0.1767334 0.07055,-0.2351853 0.223184,-0.4173847 0.45837,-0.5467366 0.246944,-0.129352 0.552719,-0.1937867 0.917256,-0.1937867 0.470371,0 0.823148,0.1114372 1.058334,0.3348633 0.235185,0.2116668 0.35295,0.5116309 0.35295,0.8996867 v 0.38809 c 0,0.058796 -0.02957,0.088367 -0.08837,0.088367 H 65.29937 c -1.175926,0 -2.081629,0.2524448 -2.71663,0.758093 -0.635,0.493889 -0.952396,1.193633 -0.952396,2.099097 0,0.870185 0.282015,1.528738 0.84646,1.97559 0.564444,0.446852 1.30538,0.670243 2.222603,0.670243 1.093612,0 1.887361,-0.323207 2.38125,-0.969967 0.02352,-0.03528 0.04728,-0.0469 0.0708,-0.03514 0.02352,0.01176 0.03514,0.035 0.03514,0.07028 v 0.581877 c 0,0.0588 0.01743,0.112126 0.05271,0.159163 0.04704,0.03528 0.100367,0.05271 0.159163,0.05271 h 2.06344 c 0.0588,0 0.105799,-0.01743 0.141077,-0.05271 0.04704,-0.04704 0.0708,-0.100367 0.0708,-0.159163 V 8.76639 c 0,-0.5644449 -0.170578,-1.0756619 -0.511596,-1.5342733 C 68.832927,6.7735053 68.368196,6.4149173 67.768473,6.1562134 67.168751,5.8857502 66.486956,5.7500366 65.722603,5.7500366 Z m 10.212814,0.018087 c -0.81139,0 -1.45832,0.3527773 -1.94045,1.0583333 -0.01176,0.023519 -0.02919,0.029329 -0.05271,0.01757 -0.02352,-0.011759 -0.03514,-0.035519 -0.03514,-0.070797 V 6.1029867 c 0,-0.058796 -0.02376,-0.1057989 -0.0708,-0.1410767 C 73.801037,5.914873 73.754037,5.89163 73.69524,5.89163 H 71.6318 c -0.0588,0 -0.112126,0.023243 -0.159163,0.07028 -0.03528,0.035278 -0.05271,0.08228 -0.05271,0.1410767 V 14.74587 c 0,0.0588 0.01743,0.112126 0.05271,0.159163 0.04704,0.03528 0.100367,0.05271 0.159163,0.05271 h 2.06344 c 0.0588,0 0.105799,-0.01743 0.141077,-0.05271 0.04704,-0.04704 0.0708,-0.100367 0.0708,-0.159163 V 9.93066 c 0,-0.4586114 0.146818,-0.8230102 0.4408,-1.0934733 0.293981,-0.2822224 0.652569,-0.4411789 1.075903,-0.4764567 0.16463,-0.023519 0.294016,-0.03514 0.38809,-0.03514 0.235185,0 0.441144,0.02957 0.617533,0.088367 0.152871,0.058796 0.235254,0.017605 0.247014,-0.1235067 L 77.04646,6.2792033 C 77.069978,6.1498513 77.035114,6.061657 76.94104,6.01462 76.694095,5.8499902 76.35875,5.7681234 75.935417,5.7681236 Z M 31.979443,5.89163 c -0.0588,0 -0.111609,0.023243 -0.158646,0.07028 -0.03528,0.035278 -0.05323,0.08228 -0.05323,0.1410767 v 5.8916303 c 0,0.976019 0.288343,1.734387 0.864547,2.275313 0.576204,0.540926 1.310812,0.81132 2.204516,0.81132 0.987779,0 1.717093,-0.317396 2.187464,-0.952397 0.02352,-0.03528 0.04676,-0.0469 0.07028,-0.03514 0.02352,0 0.03566,0.01743 0.03566,0.05271 v 0.599447 c 0,0.0588 0.01743,0.112126 0.05271,0.159163 0.04704,0.03528 0.09985,0.05271 0.158647,0.05271 h 2.063957 c 0.0588,0 0.105799,-0.01743 0.141076,-0.05271 0.04704,-0.04704 0.0708,-0.100367 0.0708,-0.159163 V 6.1029867 c 0,-0.058796 -0.02376,-0.1057989 -0.0708,-0.1410767 -0.03528,-0.047037 -0.08228,-0.07028 -0.141076,-0.07028 H 37.34139 c -0.0588,0 -0.11161,0.023243 -0.158647,0.07028 -0.03528,0.035278 -0.05271,0.08228 -0.05271,0.1410767 v 5.5562503 c -0.0588,0.388055 -0.217752,0.705452 -0.476456,0.952396 -0.258704,0.235186 -0.587722,0.35295 -0.987537,0.35295 -0.446852,0 -0.799629,-0.146818 -1.058333,-0.4408 -0.246945,-0.293981 -0.37052,-0.676329 -0.37052,-1.1467 V 6.1029867 c 0,-0.058796 -0.02376,-0.1057989 -0.0708,-0.1410767 -0.03528,-0.047037 -0.08228,-0.07028 -0.141077,-0.07028 z m 13.51132,1.99316 c 0.517408,0 0.911377,0.2292019 1.18184,0.6878134 0.258704,0.4468521 0.38809,1.0642124 0.38809,1.8520836 0,0.752593 -0.117764,1.346193 -0.35295,1.781286 -0.293981,0.505649 -0.705383,0.75861 -1.23455,0.75861 -0.576204,0 -1.011365,-0.252961 -1.305346,-0.75861 -0.246945,-0.47037 -0.37052,-1.05816 -0.37052,-1.763716 0,-0.7878712 0.146818,-1.4110422 0.4408,-1.8696536 C 44.520349,8.1139919 44.938078,7.88479 45.490763,7.88479 Z m 36.371424,0 c 0.388056,0 0.711262,0.099816 0.969966,0.2997233 0.270463,0.1881483 0.458474,0.458542 0.564307,0.81132 0,-0.011759 0.02957,0.153008 0.08837,0.4940267 0.02352,0.058796 2.75e-4,0.08785 -0.07028,0.08785 h -3.051494 c -0.0588,0 -0.08837,-0.029054 -0.08837,-0.08785 0.03528,-0.2234261 0.07647,-0.4119529 0.123506,-0.5648234 C 80.633379,8.2312399 81.121353,7.88479 81.862187,7.88479 Z M 23.741703,9.7012166 h 2.187464 c 0.552685,0 0.982035,0.1415244 1.287776,0.4237464 0.305741,0.270464 0.45837,0.646484 0.45837,1.128614 0,0.48213 -0.152629,0.864477 -0.45837,1.1467 -0.305741,0.270463 -0.72928,0.40566 -1.270206,0.40566 h -2.205034 c -0.0588,0 -0.08785,-0.02957 -0.08785,-0.08837 V 9.7895833 c 0,-0.058796 0.02905,-0.088367 0.08785,-0.088367 z M 65.82854,11.07736 h 1.26969 c 0.0588,0 0.08837,0.02905 0.08837,0.08785 v 0.635103 c 0,0.423334 -0.176389,0.770301 -0.529167,1.040764 -0.352778,0.270463 -0.782128,0.40566 -1.287777,0.40566 -0.376296,0 -0.67626,-0.08819 -0.899686,-0.264584 -0.223426,-0.188148 -0.334864,-0.441109 -0.334864,-0.75861 0,-0.364537 0.146819,-0.646552 0.4408,-0.84646 0.305741,-0.199907 0.72347,-0.299723 1.252637,-0.299723 z"
       inkscape:label="BudCare" />
    <path
       id="path123"
       style="font-weight:bold;font-size:17.6389px;font-family:Barlow;-inkscape-font-specification:'Barlow Bold';display:inline;opacity:1;fill:url(#meshgradient138);fill-opacity:1;stroke-width:0.264583"
       d="m 95.60295,2.4696167 c -0.905464,0 -1.705023,0.1821994 -2.39882,0.5467367 -0.693797,0.352778 -1.235101,0.8581843 -1.623157,1.5167032 -0.376296,0.658519 -0.564306,1.4168869 -0.564306,2.2753134 v 3.95118 c 0,0.858426 0.18801,1.617311 0.564306,2.27583 0.388056,0.64676 0.92936,1.152166 1.623157,1.516703 0.693797,0.364538 1.493356,0.546737 2.39882,0.546737 0.905464,0 1.699213,-0.170578 2.38125,-0.511597 0.693797,-0.352778 1.228773,-0.858184 1.60507,-1.516703 0.376297,-0.658519 0.56431,-1.434836 0.56431,-2.32854 V 8.4139567 c 0,-0.058796 -0.0233,-0.1057989 -0.0703,-0.1410767 -0.0353,-0.047037 -0.0823,-0.070797 -0.14108,-0.070797 h -4.30413 c -0.0588,0 -0.11161,0.02376 -0.158647,0.070797 -0.03528,0.035278 -0.05323,0.08228 -0.05323,0.1410767 v 1.6226403 c 0,0.0588 0.01795,0.111609 0.05323,0.158646 0.04704,0.03528 0.09985,0.05271 0.158647,0.05271 h 1.97559 c 0.0588,0 0.08837,0.02957 0.08837,0.08837 v 0.79375 c 0,0.576204 -0.182716,1.028797 -0.547254,1.358057 -0.364537,0.3175 -0.852511,0.476456 -1.463993,0.476456 -0.635,0 -1.157839,-0.19382 -1.569413,-0.581876 -0.411575,-0.399815 -0.617534,-0.91736 -0.617534,-1.55236 V 6.73809 c 0,-0.6350004 0.18801,-1.1467342 0.564307,-1.53479 0.388056,-0.3998151 0.89979,-0.5994466 1.53479,-0.5994466 0.623241,0 1.122837,0.18801 1.499133,0.5643066 0.376297,0.3645373 0.564307,0.8171303 0.564307,1.3580566 v 0.053227 c 0,0.058796 0.01795,0.1116095 0.05323,0.1586466 0.04704,0.035278 0.09985,0.05271 0.158646,0.05271 h 2.063957 c 0.0588,0 0.105804,-0.017432 0.141084,-0.05271 0.047,-0.047037 0.0703,-0.09985 0.0703,-0.1586466 V 6.4559367 c 0,-0.7408338 -0.193828,-1.4110074 -0.581884,-2.01073 C 99.195403,3.8337248 98.660427,3.3515614 97.96663,2.9987834 97.284593,2.6460054 96.496654,2.4696167 95.60295,2.4696167 Z m 15.76906,0.1410767 c -0.0588,0 -0.11161,0.023243 -0.15864,0.07028 -0.0353,0.035278 -0.0532,0.08228 -0.0532,0.1410767 V 14.74587 c 0,0.0588 0.0179,0.112126 0.0532,0.159163 0.047,0.03528 0.0999,0.05271 0.15864,0.05271 h 2.06396 c 0.0588,0 0.1058,-0.01743 0.14108,-0.05271 0.047,-0.04704 0.0703,-0.100367 0.0703,-0.159163 V 2.82205 c 0,-0.058796 -0.0232,-0.1057989 -0.0703,-0.1410767 -0.0353,-0.047037 -0.0823,-0.07028 -0.14108,-0.07028 z m -5.9092,3.1393432 c -0.70555,0 -1.34616,0.111954 -1.92236,0.3353801 -0.56444,0.223426 -1.02337,0.5350115 -1.37614,0.9348266 -0.34102,0.3998151 -0.53484,0.8465975 -0.58188,1.3404867 -0.0118,0.082315 0.0527,0.1351281 0.19379,0.1586466 l 2.13475,0.2826701 c 0.11759,0.011759 0.19365,-0.047381 0.22893,-0.1767334 0.0705,-0.2351853 0.2237,-0.4173847 0.45888,-0.5467366 0.24695,-0.129352 0.55272,-0.1937867 0.91726,-0.1937867 0.47037,0 0.82315,0.1114372 1.05833,0.3348633 0.23519,0.2116668 0.35244,0.5116309 0.35244,0.8996867 v 0.38809 c 0,0.058796 -0.0291,0.088367 -0.0879,0.088367 h -1.79938 c -1.17592,0 -2.08111,0.2524448 -2.71611,0.758093 -0.635,0.493889 -0.95291,1.193633 -0.95291,2.099097 0,0.870185 0.28253,1.528738 0.84697,1.97559 0.56445,0.446852 1.30538,0.670243 2.22261,0.670243 1.09361,0 1.88736,-0.323207 2.38125,-0.969967 0.0235,-0.03528 0.0468,-0.0469 0.0703,-0.03514 0.0235,0.01176 0.0351,0.035 0.0351,0.07028 v 0.581877 c 0,0.0588 0.0179,0.112126 0.0532,0.159163 0.047,0.03528 0.0999,0.05271 0.15865,0.05271 h 2.06396 c 0.0588,0 0.1058,-0.01743 0.14107,-0.05271 0.047,-0.04704 0.0703,-0.100367 0.0703,-0.159163 V 8.76639 c 0,-0.5644449 -0.17057,-1.0756619 -0.51159,-1.5342733 -0.32926,-0.4586114 -0.79348,-0.8171994 -1.3932,-1.0759033 -0.59972,-0.2704632 -1.28203,-0.4061768 -2.04639,-0.4061768 z m 13.61726,0 c -0.70556,0 -1.34616,0.111954 -1.92236,0.3353801 -0.56445,0.223426 -1.02337,0.5350115 -1.37615,0.9348266 -0.34102,0.3998151 -0.53484,0.8465975 -0.58187,1.3404867 -0.0118,0.082315 0.0527,0.1351281 0.19378,0.1586466 l 2.13424,0.2826701 c 0.11759,0.011759 0.19417,-0.047381 0.22944,-0.1767334 0.0706,-0.2351853 0.2237,-0.4173847 0.45889,-0.5467366 0.24694,-0.129352 0.55272,-0.1937867 0.91726,-0.1937867 0.47037,0 0.82314,0.1114372 1.05833,0.3348633 0.23519,0.2116668 0.35243,0.5116309 0.35243,0.8996867 v 0.38809 c 0,0.058796 -0.029,0.088367 -0.0879,0.088367 h -1.79937 c -1.17593,0 -2.08163,0.2524448 -2.71663,0.758093 -0.635,0.493889 -0.9524,1.193633 -0.9524,2.099097 0,0.870185 0.28254,1.528738 0.84698,1.97559 0.56444,0.446852 1.30486,0.670243 2.22209,0.670243 1.09361,0 1.88736,-0.323207 2.38125,-0.969967 0.0235,-0.03528 0.0473,-0.0469 0.0708,-0.03514 0.0235,0.01176 0.0351,0.035 0.0351,0.07028 v 0.581877 c 0,0.0588 0.0179,0.112126 0.0532,0.159163 0.047,0.03528 0.0999,0.05271 0.15865,0.05271 h 2.06344 c 0.0588,0 0.10631,-0.01743 0.14159,-0.05271 0.047,-0.04704 0.0703,-0.100367 0.0703,-0.159163 V 8.76639 c 0,-0.5644449 -0.17058,-1.0756619 -0.5116,-1.5342733 -0.32926,-0.4586114 -0.79347,-0.8171994 -1.39319,-1.0759033 -0.59973,-0.2704632 -1.28204,-0.4061768 -2.04639,-0.4061768 z m 14.76396,0.1235067 c -0.12936,0 -0.19431,0.05333 -0.19431,0.1591634 0,0.035278 0.006,0.064331 0.0176,0.08785 l 2.89285,8.7844763 c 0.0118,0.04704 0.0118,0.0819 0,0.10542 -0.0941,0.388056 -0.22927,0.682209 -0.40566,0.882117 -0.16463,0.199908 -0.39383,0.335104 -0.68781,0.40566 -0.28223,0.07056 -0.67038,0.111747 -1.16427,0.123507 -0.0588,0 -0.11161,0.01795 -0.15865,0.05323 -0.0353,0.04704 -0.0527,0.09985 -0.0527,0.158647 v 1.62264 c 0,0.0588 0.0116,0.105799 0.0351,0.141077 0.0235,0.04704 0.0531,0.0708 0.0884,0.0708 h 0.1235 c 1.0113,0 1.79291,-0.100332 2.3456,-0.30024 0.55268,-0.199907 0.98203,-0.517303 1.28777,-0.952396 0.30574,-0.423334 0.60571,-1.063937 0.89969,-1.922364 l 3.05149,-9.1725663 c 0.0235,-0.082315 0.0177,-0.1409388 -0.0176,-0.1762166 -0.0235,-0.047037 -0.0705,-0.070797 -0.14107,-0.070797 h -2.15233 c -0.12935,0 -0.21122,0.059141 -0.24649,0.1767334 l -1.48208,5.7148965 c -0.0118,0.03528 -0.0292,0.05271 -0.0527,0.05271 -0.0235,0 -0.041,-0.01743 -0.0527,-0.05271 l -1.4821,-5.7149043 C 136.26028,5.932684 136.1779,5.8735433 136.04854,5.8735433 Z m -9.41907,0.018087 c -0.11759,0 -0.17673,0.047003 -0.17673,0.1410767 0,0.035278 0.0121,0.07647 0.0357,0.1235067 l 2.83962,4.2152463 c 0.0235,0.03528 0.0235,0.07066 0,0.105937 l -2.83962,4.215763 c -0.047,0.07056 -0.0592,0.135507 -0.0357,0.194303 0.0353,0.04704 0.0944,0.07028 0.17673,0.07028 h 2.36317 c 0.10583,0 0.18821,-0.047 0.24701,-0.141076 l 1.5875,-2.41639 c 0.0353,-0.07056 0.0707,-0.07056 0.10594,0 l 1.5875,2.41639 c 0.0588,0.09407 0.14118,0.141076 0.24701,0.141076 h 2.2226 c 0.10584,0 0.15865,-0.047 0.15865,-0.141076 0,-0.04704 -0.0116,-0.08823 -0.0351,-0.123507 l -2.82257,-4.215763 c -0.0118,-0.03528 -0.0118,-0.07066 0,-0.105937 l 2.82257,-4.2152463 c 0.047,-0.070556 0.0587,-0.1296964 0.0351,-0.1767334 -0.0235,-0.058796 -0.0763,-0.08785 -0.15865,-0.08785 h -2.36368 c -0.10583,0 -0.18821,0.047003 -0.24701,0.1410767 l -1.5875,2.41639 c -0.0353,0.070556 -0.0765,0.070556 -0.12351,0 l -1.5875,-2.41639 C 126.8177,5.9386326 126.73531,5.89163 126.62948,5.89163 Z M 105.56875,11.07736 h 1.27021 c 0.0588,0 0.0879,0.02905 0.0879,0.08785 v 0.635103 c 0,0.423334 -0.17639,0.770301 -0.52917,1.040764 -0.35278,0.270463 -0.78161,0.40566 -1.28726,0.40566 -0.3763,0 -0.67626,-0.08819 -0.89969,-0.264584 -0.22342,-0.188148 -0.33538,-0.441109 -0.33538,-0.75861 0,-0.364537 0.14734,-0.646552 0.44132,-0.84646 0.30574,-0.199907 0.72295,-0.299723 1.25212,-0.299723 z m 13.61726,0 h 1.2702 c 0.0588,0 0.0879,0.02905 0.0879,0.08785 v 0.635103 c 0,0.423334 -0.17639,0.770301 -0.52916,1.040764 -0.35278,0.270463 -0.78161,0.40566 -1.28726,0.40566 -0.3763,0 -0.67626,-0.08819 -0.89969,-0.264584 -0.22343,-0.188148 -0.33538,-0.441109 -0.33538,-0.75861 0,-0.364537 0.14734,-0.646552 0.44132,-0.84646 0.30574,-0.199907 0.72295,-0.299723 1.25212,-0.299723 z"
       inkscape:label="Galaxy" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
